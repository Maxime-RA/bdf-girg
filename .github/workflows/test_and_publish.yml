name: Build and test package

on:
  push:
    branches: ["*"] # Do not run for tags pushed
  release:
    types: [published]

jobs:
  lint_build_test:
    name: Lint, build and test on ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache the environment
        uses: actions/cache@v2
        with:
          path: |
            ~/.poetry
            ~/.cache/pre-commit
          key: env-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install and configure poetry
        run: |
          python install-poetry.py -y
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project false
          poetry config virtualenvs.path ~/.poetry/virtualenvs
          poetry config cache-dir ~/.poetry/cache
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry -V
      - name: Install dependencies
        run: |
          poetry install --no-root
      - name: Lint with pre-commit
        run: |
          poetry run pre-commit run --all-files
      - name: Build and install the library
        run: |
          poetry build
          poetry run pip install dist/girg_sampling-*.whl
      - name: Test with pytest
        run: |
          poetry run pytest

      - name: Publish with twine to TestPyPI
        if: ${{ github.event_name == 'release' }}
        env:
          #POETRY_PYPI_TOKEN_TESTPYPI: ${{secrets.TESTPYPI_TOKEN}}
          TWINE_PASSWORD: ${{secrets.TESTPYPI_TOKEN}}
        run: |
          poetry run twine upload -u __token__ --repository-url https://test.pypi.org/legacy/ --verbose --skip-existing dist/*.whl
          poetry run twine upload -u __token__ --repository-url https://test.pypi.org/legacy/ --verbose --skip-existing dist/*.tar.gz

      - name: Publish with twine to PyPI
        if: ${{ github.event_name == 'release' }}
        # Note: && github.event.action == 'published' }}
        env:
          #POETRY_PYPI_TOKEN_PYPI: ${{secrets.PYPI_TOKEN}}
          TWINE_PASSWORD: ${{secrets.PYPI_TOKEN}}
        run: |
          poetry run twine upload -u __token__ --verbose --skip-existing dist/*.whl
          poetry run twine upload -u __token__ --verbose --skip-existing dist/*.tar.gz
